unit aplica_conta;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, DBGridEhGrouping, ToolCtrlsEh, DBGridEhToolCtrls, DynVarsEh, Vcl.StdCtrls,
  EhLibVCL, GridsEh, DBAxisGridsEh, DBGridEh, Vcl.ComCtrls, FireDAC.Stan.Intf, FireDAC.Stan.Option, FireDAC.Stan.Error,
  FireDAC.UI.Intf, FireDAC.Phys.Intf, FireDAC.Stan.Def, FireDAC.Stan.Pool, FireDAC.Stan.Async, FireDAC.Phys,
  FireDAC.Phys.MySQL, FireDAC.Phys.MySQLDef, FireDAC.VCLUI.Wait, FireDAC.Stan.Param, FireDAC.DatS, FireDAC.DApt.Intf,
  FireDAC.DApt, FireDAC.Comp.ScriptCommands, FireDAC.Stan.Util, Vcl.Buttons, PngBitBtn, FireDAC.Comp.Client, ResizeKit,
  FireDAC.Comp.Script, Data.DB, FireDAC.Comp.DataSet, DBLookupEh, Vcl.Mask, DBCtrlsEh;

type
  Tfaplica_conta = class(TForm)
    PageControl1: TPageControl;
    TabSheet1: TTabSheet;
    DBGridEh1: TDBGridEh;
    TabSheet2: TTabSheet;
    otext_lst2_t: TMemo;
    TabSheet3: TTabSheet;
    oJsonData: TMemo;
    oRespuesta: TMemo;
    oConection: TFDConnection;
    oScript: TFDScript;
    ResizeKit1: TResizeKit;
    oCmdProc: TFDStoredProc;
    oBtnApply_Interfuerza: TPngBitBtn;
    oBtnExit: TPngBitBtn;
    oDs_Qry_Det: TDataSource;
    oQry_Det: TFDQuery;
    olFecha1: TLabel;
    oFecha1: TDBDateTimeEditEh;
    olFecha2: TLabel;
    oFecha2: TDBDateTimeEditEh;
    olCliente: TLabel;
    oLst_Ctes: TDBLookupComboboxEh;
    Label3: TLabel;
    oLst_emp: TDBLookupComboboxEh;
    oBtn_Preview: TPngBitBtn;
    oDs_Emp: TDataSource;
    oQry_Empresa: TFDQuery;
    oDS_Ctes: TDataSource;
    oQry_Ctes: TFDQuery;
    oAll_Ctes: TCheckBox;
    oDs_Qry_Op: TDataSource;
    oQry_Op: TFDQuery;
    DBGridEh2: TDBGridEh;
    procedure FormCreate(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure Make_Qry_Det;
    procedure Load_Ctes(iEmp: string);
    PROCEDURE Busca_Op;
    procedure oBtn_PreviewClick(Sender: TObject);
    procedure oBtnExitClick(Sender: TObject);
    procedure TabSheet2Enter(Sender: TObject);
    procedure Make_Json_Interf;
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  faplica_conta: Tfaplica_conta;

implementation

uses Utilesv20;

{$R *.dfm}

procedure Tfaplica_conta.FormCreate(Sender: TObject);
begin
  freeandnil(oConection);
  self.PageControl1.ActivePageIndex := 0;
  self.oQry_Op.Connection := fUtilesV20.oPublicCnn;
  self.oQry_Det.Connection := fUtilesV20.oPublicCnn;

  self.oQry_Empresa.Connection := fUtilesV20.oPublicCnn;
  self.oQry_Empresa.open;
  self.oQry_Empresa.First;
  self.oLst_emp.Value := Utilesv20.iId_Empresa;

  self.oQry_Ctes.Connection := fUtilesV20.oPublicCnn;
  self.oQry_Ctes.close;

  self.oScript.Connection := fUtilesV20.oPublicCnn;
  self.oCmdProc.Connection := fUtilesV20.oPublicCnn;

  self.oFecha1.Value := Now() - (60);
  self.oFecha2.Value := Now();
end;

procedure Tfaplica_conta.FormShow(Sender: TObject);
begin
  FormatSettings.DecimalSeparator := '.';
  FormatSettings.ThousandSeparator := ',';
  FormatSettings.CurrencyDecimals := 2;
  FormatSettings.DateSeparator := '/';
  FormatSettings.ShortDateFormat := 'dd/mm/yyyy';
  FormatSettings.LongDateFormat := 'dd/mm/yyyy';
  FormatSettings.TimeSeparator := ':';
  FormatSettings.TimeAMString := 'AM';
  FormatSettings.TimePMString := 'PM';
  FormatSettings.ShortTimeFormat := 'hh:nn';
  FormatSettings.LongTimeFormat := 'hh:nn:ss';
  FormatSettings.CurrencyString := '$';
  self.oQry_Op.close;
  self.oQry_Det.close;
  self.Load_Ctes('1');
end;

procedure Tfaplica_conta.Load_Ctes(iEmp: string);
var
  cSql_Ln: string;
  cSql_Cte: string;
begin
  self.oDS_Ctes.DataSet := nil;
  self.oLst_Ctes.ListSource := nil;

  cSql_Cte := '';
  cSql_Cte := cSql_Cte + 'SELECT ct.cte_id, ct.cte_nombre_com  ';
  cSql_Cte := cSql_Cte + 'FROM clientes ct ';
  cSql_Cte := cSql_Cte + 'WHERE ct.cte_inactivo = 0 ';
  cSql_Cte := cSql_Cte + 'AND   (ct.cte_emp_id=0) OR (ct.cte_emp_id= ' + QuotedStr(trim(iEmp)) + ') ';
  cSql_Cte := cSql_Cte + 'ORDER BY UCASE(TRIM(ct.cte_nombre_com)) ';

  {
    cSql_Cte := '';
    cSql_Cte := cSql_Cte + 'SELECT ct.cte_id, ct.cte_nombre_loc  ';
    cSql_Cte := cSql_Cte + 'FROM operacion ct ';
    cSql_Cte := cSql_Cte + 'WHERE (ct.op_emp_id= ' + QuotedStr(trim(iEmp)) + ') ';
    cSql_Cte := cSql_Cte + 'GROUP BY ct.cte_id ';
    cSql_Cte := cSql_Cte + 'ORDER BY UCASE(TRIM(ct.cte_nombre_loc)) ';
  }

  oQry_Ctes.close;
  oQry_Ctes.Connection := fUtilesV20.oPublicCnn;
  Utilesv20.Exec_Select_SQL(oQry_Ctes, cSql_Cte, true);
  self.oDS_Ctes.DataSet := oQry_Ctes;
  self.oLst_Ctes.ListSource := self.oDS_Ctes;
  self.oLst_Ctes.ListField := 'cte_nombre_com';
  self.oLst_Ctes.KeyField := 'cte_id';

  self.oLst_Ctes.Refresh;
  self.oLst_Ctes.Value := oQry_Ctes.FieldByName('cte_id').Value;
  self.oLst_Ctes.Enabled := true;
end;

PROCEDURE Tfaplica_conta.Busca_Op;
var
  cSql_Ln: widestring;
  sFecha_Ini, sFecha_Fin: string;
  sCod_Emp, sCod_Cte: string;
  iRecs: integer;
begin
  FormatSettings.ShortDateFormat := 'yyyy-MM-dd';
  sFecha_Ini := DateToStr(self.oFecha1.Value);
  sFecha_Fin := DateToStr(self.oFecha2.Value);
  FormatSettings.ShortDateFormat := 'dd/mm/yyyy';

  sCod_Emp := self.oLst_emp.KeyValue;
  sCod_Cte := fUtilesV20.iif(self.oAll_Ctes.Checked = true, '%', self.oLst_Ctes.KeyValue);

  cSql_Ln := '';
  cSql_Ln := cSql_Ln + 'SELECT ';
  cSql_Ln := cSql_Ln + ' `id_op`, `op_emp_id`, `op_fecha`, `cte_id`, `cte_nombre_loc`, ';
  cSql_Ln := cSql_Ln + ' `op_tot_colect`, `op_tot_impjcj`, `op_tot_tec`,';
  cSql_Ln := cSql_Ln + ' `op_tot_dev`, `op_tot_otros`, `op_tot_cred`, `op_cal_cred`, `op_tot_sub`, `op_tot_itbm`,';
  cSql_Ln := cSql_Ln + ' `op_tot_tot`,`op_tot_brutoemp`, `op_tot_netoemp`, ';
  cSql_Ln := cSql_Ln + ' `id_device`,`id_group` ';
  cSql_Ln := cSql_Ln + 'FROM operacion ';
  cSql_Ln := cSql_Ln + 'WHERE (`op_aplica_interf` =0) ';

  if not((trim(sCod_Cte) = '%') or (trim(sCod_Cte) = '')) then
    cSql_Ln := cSql_Ln + 'AND (`cte_id`="' + trim(sCod_Cte) + '") ';

  cSql_Ln := cSql_Ln + 'AND   (';
  cSql_Ln := cSql_Ln + '(DATE_FORMAT(`op_fecha`, "%Y-%m-%d") >= "' + sFecha_Ini + '") AND ';
  cSql_Ln := cSql_Ln + '(DATE_FORMAT(`op_fecha`, "%Y-%m-%d") <= "' + sFecha_Fin + '") ';
  cSql_Ln := cSql_Ln + '      )  ';
  cSql_Ln := cSql_Ln + 'ORDER BY `op_emp_id`, `op_fecha`, `cte_id` ';

  // cSql_Ln := cSql_Ln + 'LIMIT 50 ';
  self.oQry_Op.close;
  Utilesv20.Exec_Select_SQL(self.oQry_Op, cSql_Ln);
  self.oDs_Qry_Op.DataSet := self.oQry_Op;
  iRecs := self.oQry_Op.RecordCount;
  self.DBGridEh1.Refresh;
end;

procedure Tfaplica_conta.Make_Qry_Det;
var
  cSql_Ln: widestring;
  cDevice, cEmp_Id, cCte_Id, cGrp_Id: string;
  iRecs: integer;
begin
  cDevice := trim(self.oQry_Op.FieldByName('id_device').AsString);
  cEmp_Id := trim(self.oQry_Op.FieldByName('op_emp_id').AsString);
  cCte_Id := trim(self.oQry_Op.FieldByName('cte_id').AsString);
  cGrp_Id := trim(self.oQry_Op.FieldByName('id_group').AsString);

  cSql_Ln := '';
  cSql_Ln := cSql_Ln + 'SELECT ';
  cSql_Ln := cSql_Ln + ' `id_op`,`op_emp_id`,`op_fecha`,`cte_id`,`cte_nombre_loc`,`maqtc_id`,`op_chapa`,';
  cSql_Ln := cSql_Ln + ' `jueg_cod`,`op_nodoc`,`op_modelo`,`op_tot_colect`,`op_tot_impjcj`,`op_tot_tec`,';
  cSql_Ln := cSql_Ln + ' `op_tot_dev`,`op_tot_otros`,`op_tot_cred`,`op_cal_cred`,`op_tot_sub`,`op_tot_itbm`,';
  cSql_Ln := cSql_Ln + ' `op_tot_tot`,`op_tot_brutoemp`, `op_tot_netoemp`, `op_baja_prod`, ';
  cSql_Ln := cSql_Ln + ' `id_device`,`id_group` ';
  cSql_Ln := cSql_Ln + 'FROM operacion ';
  cSql_Ln := cSql_Ln + 'WHERE (`op_aplica_interf` =0) ';
  cSql_Ln := cSql_Ln + 'AND   (`op_emp_id`="' + trim(cEmp_Id) + '") ';
  cSql_Ln := cSql_Ln + 'AND   (`cte_id`   ="' + trim(cCte_Id) + '") ';
  cSql_Ln := cSql_Ln + 'AND   (`id_device`="' + trim(cDevice) + '") ';
  cSql_Ln := cSql_Ln + 'AND   (`id_group` ="' + trim(cGrp_Id) + '") ';
  cSql_Ln := cSql_Ln + 'ORDER BY `op_emp_id`, `op_fecha`, `cte_id`, `op_chapa` ';

  self.oQry_Det.close;
  Utilesv20.Exec_Select_SQL(self.oQry_Det, cSql_Ln);
  self.oDs_Qry_Det.DataSet := self.oQry_Det;
  iRecs := self.oQry_Det.RecordCount;
  if (iRecs > 0) then
    self.oBtnApply_Interfuerza.Enabled := true
  else
    self.oBtnApply_Interfuerza.Enabled := false;

  self.DBGridEh2.Refresh;
end;

procedure Tfaplica_conta.oBtnExitClick(Sender: TObject);
begin
  close;
end;

procedure Tfaplica_conta.oBtn_PreviewClick(Sender: TObject);
var
  cCod_Emp: string;
begin
  cCod_Emp := self.oLst_emp.Value;
  self.Busca_Op();
end;

procedure Tfaplica_conta.TabSheet2Enter(Sender: TObject);
begin
  if (self.oQry_Op.RecordCount > 0) then
  begin
    self.Make_Qry_Det();
  end;
end;

procedure Tfaplica_conta.Make_Json_Interf;
begin
  while not self.oQry_Det.eof do
  begin

  end;
end;

end.
